@import url('https://fonts.googleapis.com/css2?family=Architects+Daughter&display=swap');

:root {
  --background: #ffffff;
  --foreground: #171717;
  
  /* Moderately enhanced color palette - balanced saturation */
  --member-color-C1: #ffa5ad; /* medium pink */
  --member-color-C2: #ffd0a9; /* soft peach */
  --member-color-C3: #fff0a0; /* mellow yellow */
  --member-color-C4: #a8e6be; /* mint green */
  --member-color-C5: #a8d1f2; /* powder blue */
  --member-color-C6: #c9bff2; /* soft lavender */
  --member-color-C7: #ffb8ee; /* light pink */
  --member-color-C8: #c9bdb3; /* warm taupe */
  --member-color-C9: #a8ede5; /* aqua */
  --member-color-C10: #e0cba8; /* sand */
  
  --unassigned: white;
}

select:has(option[value="C1"]:checked) {
    background-color: var(--member-color-C1);
}
select:has(option[value="C2"]:checked) {
    background-color: var(--member-color-C2);
}
select:has(option[value="C3"]:checked) {
    background-color: var(--member-color-C3);
}
select:has(option[value="C4"]:checked) {
    background-color: var(--member-color-C4);
}
select:has(option[value="C5"]:checked) {
    background-color: var(--member-color-C5);
}
select:has(option[value="C6"]:checked) {
    background-color: var(--member-color-C6);
}
select:has(option[value="C7"]:checked) {
    background-color: var(--member-color-C7);
}
select:has(option[value="C8"]:checked) {
    background-color: var(--member-color-C8);
}
select:has(option[value="C9"]:checked) {
    background-color: var(--member-color-C9);
}
select:has(option[value="C10"]:checked) {
    background-color: var(--member-color-C10);
}

/* in order to not have them show up in the selected color */
option:disabled {
    background-color: #ffffff
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

@media (prefers-color-scheme: dark) {
  body, p, h1, h2, h3, h4, h5, h6, span, div, button, input, textarea, select, label {
    color: #000000 !important; /* Force black text */
  }
  
  .profile-info-label, .profile-info-value {
    color: #000000 !important;
  }
  
  /* Ensure all other text elements stay black */
  .task-card, .menu-item, .team-info, .week-text, .profile-title {
    color: #000000 !important;
  }
  
  /* For any elements that need to be visible against the dark background */
  .task-claimed-message {
    color: white !important; /* Keep this white for visibility */
  }
}

@media (prefers-color-scheme: dark) {
  /* Your existing code */
  
  textarea, 
  textarea#description {
    background-color: transparent !important; /* Force white background */
    color: #000000 !important; /* Force black text */
  }
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: rgb(252, 252, 252);
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
  background: transparent;

}

.login-button {
  width: 100%;
}



.ant-descriptions-item-label {
  color: white !important;
}


.team-page {
  display: flex;
  flex-direction: row;      /* Stack the containers vertically */
  justify-content: space-between; /* Align items at the top of the container */
  align-items: center;         /* Horizontally center the items */
  gap: 0px;                   /* Space between the containers */
  height: 100vh;               /* Full viewport height */
  background: 'transparent'; /* Background color */
  padding: 0 3%;
}


.flex-container {
  display: flex;
  width: 100%;
  justify-content: space-between;
}

.flex-section {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.divider {
  height: 100%;
  margin: 0 20px;
}

.centered-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}


@keyframes splashFromBottomLeft {
  0% {
    transform: translate(-100%, 100%) scale(0.2);
    opacity: 0;
  }
  60% {
    opacity: 1;
  }
  100% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}

/* Splash moving from bottom-left */
@keyframes scrollSplashBottomLeft {
  0% {
    transform: translate(-10%, 90%) scale(0.8); /* Start at the bottom-left */
  }
  100% {
    transform: translate(100px, -90px) scale(1.2); /* Move to the center */
  }
}

/* Splash moving from top-right */
@keyframes scrollSplashTopRight {
  0% {
    transform: translate(110%, -90%) scale(0.8); /* Start at the top-right */
  }
  100% {
    transform: translate(50px, -50px) scale(1.2); /* Move to the center */
  }
}

/* Class for bottom-left splash */
.animated-splash-bottom-left {
  animation: scrollSplashBottomLeft 2s ease-out forwards; /* Smooth movement */
}

/* Class for top-right splash */
.animated-splash-top-right {
  animation: scrollSplashTopRight 2s ease-out forwards; /* Smooth movement */
}

button {
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
}
.login {
  
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: rgb(41, 44, 59);
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;

}


@keyframes float {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-50px);
  }
  100% {
    transform: translateY(0);
  }
}

.floating {
  animation: float 3s ease-in-out infinite;
  transform-origin: center;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

body {
  background: linear-gradient(to right, #f5f5f5, #fafafa);
}

/* Overall page structure */
.pinboard-page {
  display: flex;
  flex-direction: column; /* Vertical split between top nav and content area */
  height: 100vh;
  background-color: transparent #ffffff; /* light gray */
}

/* Top Nav (horizontal header) */
.top-nav {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 8%;
  background-color: transparent;
  position: relative;
}

/* Content Area (horizontal split between left sidebar and task grid) */
.content-area {
  display: flex;
  flex-direction: row;
  flex: 1;
  height: 90%;
 
}

/* Left Sidebar */
.left-sidebar {
  display: flex;
  flex-direction: column;
  justify-content: center; /* Align content to the top */
  width: 10%; /* Fixed width for left sidebar */
  padding: 2%;
  gap: 6%;
  height: 92%;
  background-color: transparent #fff3cd; /* light blue */
  text-align: center;
  
}

/* Container to hold both the task grid and bottom actions */
.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative; /* For positioning the fixed bottom area */
}

/* Task Grid */
.task-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
  padding: 15px;
  background-color: transparent #fde2e2; /* soft pink */
  height: 100vh; /* Takes 80% of the container */
  overflow-y: auto; /* Allows scrolling if many tasks */
  text-align: center;
}

/* Task Card */
.task-card {
  display: flex;
  
  justify-content: center;
  align-items: center;
  background-color:transparent white; /* white inside cards */
  padding: 5px;
  
  
}

/* Bottom Actions */
.bottom-actions {
  display: flex;
  position: fixed;
  bottom: 0;
  left: 10%; /* To shift it 10% from the left */
  width: 85%; /* 100% - 10% (left cut) - 5% (right cut) */
  height: 20%;
  justify-content: center;
  align-items: center;
  gap: 10%;
  padding: 30px;
  
  
}

/* Menu Items - consistent styling for both sidebar and bottom actions */
.menu-item {
  display: flex;
  flex-direction: column;  /* Stack SVG and text vertically */
  align-items: center;     /* Center align the items horizontally */
  gap: 8px;                /* Adds space between SVG and text */
  font-size: 0.8rem;       /* Consistent font size */
  text-align: center;
}

/* Control SVG size universally */
.menu-item svg {
  width: 6rem;             /* Set a consistent width */
  height: 6rem;            /* Set a consistent height */
}


.task-card .full-name-tooltip {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  background-color: #000000b3;
  color: white;
  padding: 10px;
  border-radius: 5px;
  width: auto;
  max-width: 200px;
  font-size: 1rem;
  text-align: center;
  display: none;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 999;
}


.calendar-page {
  display: flex;
  flex-direction: column; /* Vertical split between top nav and content area */
  height: 100vh;
  background-color: transparent; /* light gray */
}


.calendar-top-nav {
  position: relative;      /* needed for absolute children */
  height: 8%;

}

/* Centered toggle */
.toggle-wrapper {
  position: absolute;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);
}

/* Top-right team info */
.team-info {
  position: absolute;
  top: 1rem;
  left: 1rem;
  text-align: right;
  font-size: 0.9rem;
  color: #333;
  text-align: left;
}

.week-indicator {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
}

.week-indicator-wrapper {
  position: relative;
  display: inline-block;
}

.week-text {
  position: absolute;
  top: 70%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 16px;
  font-weight: bold;
  color: black;
  pointer-events: none;
}
.week-indicator-wrapper svg {
  display: block;
  width: 180px; 
  height: auto;
}



.calendar-content-area {
  display: flex;
  flex-direction: row;
  flex: 1;
  height: 100%;
  
 
}
/* .day-cell {
  flex: 1;
  border: 1px ;
  padding: 0.5rem;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.5rem; 
} */

.day-cell {
  flex: 1;
  border: 1px;
  padding: 0.5rem;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start; /* Changed from center to flex-start */
  min-height: 400px; /* Add explicit minimum height */
  height: 100%; /* Make sure it takes full height */
  gap: 0.5rem;
}

.day-cell-content {
  position: relative;
  width: 100%;
  height: 100% !important; /* Force full height */
  min-height: 350px; /* Add explicit minimum height */
  display: flex;
  flex-direction: column;
  align-items: center;
}




.background-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none; /* This allows clicks to pass through to elements below */
}

.card-container {
  position: relative;
  z-index: 2;
  padding: 20px;
  max-width: 1200px;
  margin: 0 auto;
}

.dashboard-container {
  background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent background */
  backdrop-filter: blur(5px); /* Optional: adds a slight blur effect */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.profile-wrapper {
  position: relative;
  width: 100%;
  min-height: 100vh;
  overflow: hidden;
  background: transparent;
}

.background-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
}

.card-container {
  position: relative;
  z-index: 1;
  padding: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: calc(100vh - 40px); /* Account for padding */
}

.profile-frame-container {
  position: relative;
  width: 100%;
  max-width: 50rem;
  margin: 0 auto;
  padding: 20px;
}

/* Frame wrapper - holds the SVG frame */
.frame-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none; /* Allow clicking through to content */
}

/* The SVG frame itself */
.profile-frame-svg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

/* Style the profile card to fit within the frame */
.profile-card {
  position: relative;
  z-index: 0;
  margin: 0 auto;
  padding: 25px;
  transform: translateX(6rem); 
  background-color: transparent; /* white inside cards */
}

/* New custom profile info styling */
.custom-profile-info {
  background-color: transparent;
  margin-bottom: 20px;
}

.profile-info-row {
  display: flex;
  padding: 12px 0;
}

.profile-info-row:last-child {
  border-bottom: none;
}

.profile-info-label {
  flex: 0 0 35%;
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
  font-size: 1.3rem;
  font-weight: bold;
  color: rgba(0, 0, 0, 0.85);
  padding-right: 10px;
}

.profile-info-value {
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
  flex: 0 0 65%;
  font-size: 1.3rem;
  font-weight: bold;
  color: rgba(0, 0, 0, 0.65);
}

/* Glass effect */
.profile-card .ant-card-body {
  backdrop-filter: blur(0px);
}

/* Profile Edit Form Styles */
.profile-edit-form {
  background-color: transparent;
  width: 100%;
}

.profile-edit-form label {
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
  font-size: 1.3rem;
  font-weight: bold;
  color: rgba(0, 0, 0, 0.85);
  flex: 0 0 35%;
}

.profile-edit-form input, 
.profile-edit-form textarea,
.profile-edit-form select {
  font-family: 'Architects Daughter', Arial, Helvetica, sans-serif;
  font-size: 1.3rem;
  flex: 0 0 65%;
  background-color: rgba(255, 255, 255, 0.7);
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 4px;
  padding: 8px;
}

.profile-form-field {
  margin-bottom: 1rem !important;
}

.profile-form-buttons {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  margin-top: 20px;
}

.profile-form-buttons button {
  padding: 8px 16px;
  border-radius: 4px;
  border: none;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.3s;
}

.profile-form-buttons button:hover {
  opacity: 0.9;
  transform: translateY(-2px);
}

.profile-title {
  position: absolute;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 1.5rem;
  font-weight: bold;
  background: transparent;
  padding: 10px 20px;
  border-radius: 8px;
  box-shadow: transparent;
  z-index: 3;
  white-space: nowrap;
}

.profile-card {
  margin-top: 30px; /* Create space for the title */
}

/* Media query for mobile responsiveness */
@media (max-width: 768px) {
  .profile-frame-container {
    padding: 10px;
  }
  
  .profile-card {
    padding: 15px;
    transform: translateX(0); /* Remove transform on mobile */
  }
  
  .profile-info-row {
    flex-direction: column;
    padding: 8px 0;
  }
  
  .profile-info-label, 
  .profile-info-value {
    flex: 1 1 100%;
  }
  
  .profile-info-label {
    margin-bottom: 4px;
  }

  .profile-edit-form label,
  .profile-edit-form input, 
  .profile-edit-form textarea,
  .profile-edit-form select {
    flex: 1 1 100%;
  }

  .profile-form-buttons {
    flex-direction: column;
  }
}

/* Task List Animations */

/* Lucky Draw Animations */
@keyframes shuffle {
  0% { transform: translateX(0) translateY(0) rotate(0); }
  25% { transform: translateX(20px) translateY(-15px) rotate(5deg); }
  50% { transform: translateX(-15px) translateY(10px) rotate(-8deg); }
  75% { transform: translateX(10px) translateY(-5px) rotate(3deg); }
  100% { transform: translateX(0) translateY(0) rotate(0); }
}

.shuffling {
  animation: shuffle 0.8s ease-in-out;
}

/* Karma's Hand Animations */
@keyframes distribute {
  0% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
  100% { transform: translateY(0); }
}

@keyframes colorTransition {
  0% { opacity: 0.3; }
  50% { opacity: 0.7; }
  100% { opacity: 1; }
}

.distributing {
  animation: distribute 1s ease-in-out;
}

.color-transitioning {
  animation: colorTransition 1.5s ease-in-out;
}

/* Common Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Task Card Styles */
.task-card {
  position: relative;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
}

.task-card.covered-task:hover {
  transform: translateY(-5px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

/* Task Claimed Overlay */
.task-claimed-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 8px;
  animation: fadeIn 0.3s ease-in-out;
}

.task-claimed-message {
  color: white;
  font-size: 1.5rem;
  font-weight: bold;
}

/* Card shuffling animation */
@keyframes shuffle {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }
  25% {
    transform: translateX(50px) translateY(-20px) rotate(5deg);
  }
  50% {
    transform: translateX(-30px) translateY(30px) rotate(-5deg);
  }
  75% {
    transform: translateX(20px) translateY(-40px) rotate(3deg);
  }
  100% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }
}

/* Sparkles animation */
@keyframes sparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

.task-card.shuffling {
  animation: shuffle 1s ease-in-out;
}

/* Task claimed overlay styles */
.task-claimed-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.6);
  border-radius: 8px;
  backdrop-filter: blur(2px);
  animation: fadeIn 0.5s ease-in-out;
  pointer-events: none;
}

/* Task card hover effect in lucky draw mode */
.task-card {
  transition: transform 0.2s ease-in-out;
}

.task-card:hover:not(.shuffling) {
  transform: translateY(-5px);
  z-index: 10;
}

/* Apply brightening and scaling effects to ALL task cards on hover */
.task-card:hover:not(.shuffling) .task-card-svg {
  filter: brightness(1.1);
  transform: scale(1.02);
}

/* Enhanced Claimed Task Animation */

/* Improved pulse animation with stronger visual impact */
@keyframes enhancedPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(0, 125, 167, 0.7);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.08);
    box-shadow: 0 0 0 15px rgba(0, 125, 167, 0);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(0, 125, 167, 0);
    opacity: 0.9;
  }
}

/* Glowing text animation */
@keyframes textGlow {
  0% {
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
  }
  50% {
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 30px rgba(255, 255, 255, 0.6);
  }
  100% {
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
  }
}

/* Subtle background shimmer */
@keyframes shimmer {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Modern claimed message styling */
.task-claimed-message {
  /* Base styling */
  background-color: rgb(0, 125, 167);
  color: white;
  padding: 8px 18px;
  border-radius: 30px;
  font-weight: bold;
  font-size: 1.1rem;
  letter-spacing: 0.5px;
  
  /* Enhanced shadow for depth */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3),
              inset 0 -2px 5px rgba(0, 0, 0, 0.2),
              inset 0 2px 5px rgba(255, 255, 255, 0.2);
  
  /* Gradient background for added visual appeal */
  background-image: linear-gradient(45deg, 
    rgba(0, 125, 167, 1) 0%, 
    rgba(0, 150, 199, 1) 50%, 
    rgba(0, 125, 167, 1) 100%);
  background-size: 200% 100%;
  
  /* Animations */
  animation: 
    enhancedPulse 2s infinite,
    textGlow 2s infinite,
    shimmer 3s infinite linear;
  
  /* Transition for hover effects */
  transition: all 0.3s ease;
  
  /* Optional: add a small icon */
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

/* Add a checkmark icon before the text */
.task-claimed-message::before {
  content: "✓";
  font-size: 1.2em;
  margin-right: 3px;
}

/* Karma's Hand Animation Styles */
@keyframes distribute {
  0% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
  100% { transform: translateY(0); }
}

@keyframes colorTransition {
  0% { opacity: 0.3; }
  50% { opacity: 0.7; }
  100% { opacity: 1; }
}

.distributing {
  animation: distribute 1s ease-in-out;
}

.color-transitioning {
  animation: colorTransition 1.5s ease-in-out;
}

/* Add a fadeIn animation if not already defined */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Task card claimed state */
.task-card.claimed {
  position: relative;
  overflow: visible;
}

.task-card.claimed::after {
  content: "";
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  border-radius: 13px;
  background: transparent;
  box-shadow: 0 0 15px rgba(0, 125, 167, 0.7);
  animation: enhancedPulse 2s infinite;
  z-index: -1;
}